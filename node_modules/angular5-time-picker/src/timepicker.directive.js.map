{"version":3,"file":"timepicker.directive.js","sourceRoot":"","sources":["../../src/timepicker.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,wBAAwB,EAAC,MAAM,yBAAyB,CAAC;AAEjE,OAAO,EACL,SAAS,EACT,UAAU,EACV,UAAU,EACV,KAAK,GACN,MAAM,eAAe,CAAC;AAEvB,OAAO,EAGL,aAAa,EACb,iBAAiB,EAKlB,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAC,cAAc,EAAC,MAAM,wCAAwC,CAAC;AAEtE,MAAM,CAAC,IAAM,6BAA6B,GAAQ;IAChD,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,mBAAmB,EAAnB,CAAmB,CAAC;IAClD,KAAK,EAAE,IAAI;CACZ,CAAC;AAGF,MAAM,CAAC,IAAM,yBAAyB,GAAQ;IAC5C,OAAO,EAAE,aAAa;IACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,mBAAmB,EAAnB,CAAmB,CAAC;IAClD,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF,IAAA;IAIE,iCAAY,0EAA0E;IACnE,MAA2B;IAE3B,aAA0B;QAF1B,WAAM,GAAN,MAAM,CAAqB;QAE3B,kBAAa,GAAb,aAAa,CAAa;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAChC;kCA3CH;IA4CC,CAAA;AAVD,mCAUC;;IAsDC,6BAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;KAE1C;0BAzCG,sCAAK;;YAEP,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;oBAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC1C,OAAO,EAAE,CAAC;iBACX;gBAED,IAAI,OAAO,GAAG,KAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAS,CAAC;gBACpD,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;oBAC1C,OAAO,GAAG,EAAE,CAAC;iBACd;gBAED,IAAI,IAAI,GAAG,KAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAM,CAAC;gBAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,EAAE;oBACxC,IAAI,GAAG,IAAI,CAAC;iBACb;gBAED,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAM,IAAI,YAAO,OAAS,CAAC;oBAC/D,OAAU,IAAI,YAAO,OAAS,CAAC;iBAEhC;qBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;oBAE/C,IAAM,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACzD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAM,IAAI,SAAI,EAAE,SAAI,OAAS,CAAC;oBAClE,OAAU,IAAI,SAAI,EAAE,SAAI,OAAS,CAAC;iBAEnC;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAM,IAAI,SAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,SAAI,OAAS,CAAC;oBAC/F,OAAU,IAAI,SAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,SAAI,OAAS,CAAC;iBAChE;aACF;YAED,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YAC1C,OAAO,EAAE,CAAC;;;;;;gBAjDb,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,wBAAwB,EAAE,WAAW,EAAE,mBAAmB,EAAC;qBACtE;oBACD,QAAQ,EAAE,oBAAoB;iBAC/B;;;;gBAhDC,UAAU;;;+BAoDT,KAAK,SAAC,eAAe;0BAErB,KAAK;;8BA1DR;;SAsDa,mBAAmB","sourcesContent":["import {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\n\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport {WTimeComponent} from \"./time-control/w-time/w-time.component\";\n\nexport const MAT_TIMEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerDirective),\n  multi: true\n};\n\n\nexport const MAT_TIMEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => TimepickerDirective),\n  multi: true\n};\n\nexport class MatTimepickerInputEvent {\n  /** The new value for the target timepicker input. */\n  value: string;\n\n  constructor(/** Reference to the timepicker input component that emitted the event. */\n              public target: TimepickerDirective,\n              /** Reference to the native input element associated with the timepicker input. */\n              public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n@Directive({\n  selector: 'input[matTimepicker]',\n  providers: [\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: TimepickerDirective},\n  ],\n  exportAs: 'matTimepickerInput',\n})\n\nexport class TimepickerDirective {\n\n  @Input('matTimepicker') timepicker: WTimeComponent;\n\n  @Input()\n  get value(): string {\n\n    if (this.timepicker) {\n\n      if (!this.timepicker.userTime) {\n        this._elementRef.nativeElement.value = '';\n        return '';\n      }\n\n      let meriden = `${this.timepicker.userTime.meriden}`;\n      if (this.timepicker.userTime.format === 24) {\n        meriden = '';\n      }\n\n      let hour = `${this.timepicker.userTime.hour}`;\n      if (this.timepicker.userTime.hour === 24) {\n        hour = '00';\n      }\n\n      if (this.timepicker.userTime.minute === 0) {\n        this._elementRef.nativeElement.value = `${hour}:00 ${meriden}`;\n        return `${hour}:00 ${meriden}`;\n\n      } else if (this.timepicker.userTime.minute < 10) {\n\n        const tt = '0' + String(this.timepicker.userTime.minute);\n        this._elementRef.nativeElement.value = `${hour}:${tt} ${meriden}`;\n        return `${hour}:${tt} ${meriden}`;\n\n      } else {\n        this._elementRef.nativeElement.value = `${hour}:${this.timepicker.userTime.minute} ${meriden}`;\n        return `${hour}:${this.timepicker.userTime.minute} ${meriden}`;\n      }\n    }\n\n    this._elementRef.nativeElement.value = '';\n    return '';\n  }\n\n  constructor(private _elementRef: ElementRef) {\n\n  }\n\n}\n"]}
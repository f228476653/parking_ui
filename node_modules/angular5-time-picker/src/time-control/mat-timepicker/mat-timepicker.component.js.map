{"version":3,"file":"mat-timepicker.component.js","sourceRoot":"","sources":["../../../../src/time-control/mat-timepicker/mat-timepicker.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAkB,YAAY,EAAC,MAAM,eAAe,CAAC;AAErF,OAAO,EAAC,UAAU,EAAQ,MAAM,8BAA8B,CAAC;AAG/D,OAAO,EAAC,YAAY,EAAC,MAAM,MAAM,CAAC;;IAiChC;8BApBgD,IAAI,YAAY,EAAE;wBAKzB,IAAI,YAAY,EAAE;wBACjB,IAAI,YAAY,EAAE;0BAIxC,UAAU,CAAC,KAAK;4BACd,UAAU,CAAC,OAAO;2BACP,IAAI,CAAC,UAAU;;kCAGnB,YAAY,CAAC,KAAK;KAM9C;IAED,yCAAQ,GAAR;QAEE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;;;;;;;;SASnB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAErB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAA;SAC5B;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAErB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;SACxB;KACF;IAEM,2CAAU,GAAjB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,EAAE;gBAC7B,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,EAAE;gBAClC,OAAO,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACzC;SACF;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACnC;IAEM,6CAAY,GAAnB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;YACpC,OAAO,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC3C;aAAM;YACL,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACrC;KACF;IAEM,+CAAc,GAArB,UAAsB,IAAgB;QAEpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAEM,4CAAW,GAAlB,UAAmB,CAAc;QAE/B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;KAC3B;IAEM,uCAAM,GAAb;QAEE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACtB;IAEM,uCAAM,GAAb;QAEE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnC;IAEM,mDAAkB,GAAzB,UAA0B,KAAK;QAE7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACzC;;gBA7GF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,EAAE;oBAEZ,MAAM,EAAE,CAAC,EAAE,CAAC;iBAEb;;;;;6BAGE,KAAK;mCACL,MAAM;gCAEN,KAAK;gCACL,KAAK;6BAEL,MAAM;6BACN,MAAM;0BAEN,KAAK;;iCA1BR;;SAea,sBAAsB","sourcesContent":["import {Component, Input, Output, OnInit, Inject, EventEmitter} from '@angular/core';\n\nimport {CLOCK_TYPE, ITime} from '../w-clock/w-clock.component';\nimport {TimepickerDirective} from \"../../timepicker.directive\";\n\nimport {Subscription} from 'rxjs';\n\n\n@Component({\n  selector: 'mat-timepicker',\n  template: ``,\n\n  styles: [``]\n\n})\nexport class MatTimepickerComponent implements OnInit {\n\n  @Input() userTime: ITime;\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() revertLabel: string;\n  @Input() submitLabel: string;\n\n  @Output() onRevert: EventEmitter<null> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() color: string;\n\n  public VIEW_HOURS = CLOCK_TYPE.HOURS;\n  public VIEW_MINUTES = CLOCK_TYPE.MINUTES;\n  public currentView: CLOCK_TYPE = this.VIEW_HOURS;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this timepicker is associated with. */\n  _timepickerInput: TimepickerDirective;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n    if (!this.userTime) {\n\n      // this.userTime = {\n      //\n      //   hour: 6,\n      //   minute: 0,\n      //   meriden: 'PM',\n      //   format: 12\n      // };\n    }\n\n    if (!this.revertLabel) {\n\n      this.revertLabel = 'Cancel'\n    }\n\n    if (!this.submitLabel) {\n\n      this.submitLabel = 'OK'\n    }\n  }\n\n  public formatHour(): string {\n    if (!this.userTime) {\n      return '';\n    }\n\n    if (this.userTime.format === 24) {\n      if (this.userTime.hour === 24) {\n        return '00';\n      } else if (this.userTime.hour < 10) {\n        return '0' + String(this.userTime.hour);\n      }\n    }\n    return String(this.userTime.hour);\n  }\n\n  public formatMinute(): string {\n    if (!this.userTime) {\n      return '';\n    }\n\n    if (this.userTime.minute === 0) {\n      return '00';\n    } else if (this.userTime.minute < 10) {\n      return '0' + String(this.userTime.minute);\n    } else {\n      return String(this.userTime.minute);\n    }\n  }\n\n  public setCurrentView(type: CLOCK_TYPE) {\n\n    this.currentView = type;\n  }\n\n  public setMeridien(m: 'PM' | 'AM') {\n\n    this.userTime.meriden = m;\n  }\n\n  public revert() {\n\n    this.onRevert.emit();\n  }\n\n  public submit() {\n\n    this.onSubmit.emit(this.userTime);\n  }\n\n  public emituserTimeChange(event) {\n\n    this.userTimeChange.emit(this.userTime);\n  }\n}\n"]}
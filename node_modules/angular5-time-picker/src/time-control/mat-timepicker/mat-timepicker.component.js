import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CLOCK_TYPE } from '../w-clock/w-clock.component';
import { Subscription } from 'rxjs';
var MatTimepickerComponent = /** @class */ (function () {
    function MatTimepickerComponent() {
        this.userTimeChange = new EventEmitter();
        this.onRevert = new EventEmitter();
        this.onSubmit = new EventEmitter();
        this.VIEW_HOURS = CLOCK_TYPE.HOURS;
        this.VIEW_MINUTES = CLOCK_TYPE.MINUTES;
        this.currentView = this.VIEW_HOURS;
        /** Subscription to value changes in the associated input element. */
        this._inputSubscription = Subscription.EMPTY;
    }
    MatTimepickerComponent.prototype.ngOnInit = function () {
        if (!this.userTime) {
            // this.userTime = {
            //
            //   hour: 6,
            //   minute: 0,
            //   meriden: 'PM',
            //   format: 12
            // };
        }
        if (!this.revertLabel) {
            this.revertLabel = 'Cancel';
        }
        if (!this.submitLabel) {
            this.submitLabel = 'OK';
        }
    };
    MatTimepickerComponent.prototype.formatHour = function () {
        if (!this.userTime) {
            return '';
        }
        if (this.userTime.format === 24) {
            if (this.userTime.hour === 24) {
                return '00';
            }
            else if (this.userTime.hour < 10) {
                return '0' + String(this.userTime.hour);
            }
        }
        return String(this.userTime.hour);
    };
    MatTimepickerComponent.prototype.formatMinute = function () {
        if (!this.userTime) {
            return '';
        }
        if (this.userTime.minute === 0) {
            return '00';
        }
        else if (this.userTime.minute < 10) {
            return '0' + String(this.userTime.minute);
        }
        else {
            return String(this.userTime.minute);
        }
    };
    MatTimepickerComponent.prototype.setCurrentView = function (type) {
        this.currentView = type;
    };
    MatTimepickerComponent.prototype.setMeridien = function (m) {
        this.userTime.meriden = m;
    };
    MatTimepickerComponent.prototype.revert = function () {
        this.onRevert.emit();
    };
    MatTimepickerComponent.prototype.submit = function () {
        this.onSubmit.emit(this.userTime);
    };
    MatTimepickerComponent.prototype.emituserTimeChange = function (event) {
        this.userTimeChange.emit(this.userTime);
    };
    MatTimepickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mat-timepicker',
                    template: "",
                    styles: [""]
                },] },
    ];
    /** @nocollapse */
    MatTimepickerComponent.ctorParameters = function () { return []; };
    MatTimepickerComponent.propDecorators = {
        "userTime": [{ type: Input },],
        "userTimeChange": [{ type: Output },],
        "revertLabel": [{ type: Input },],
        "submitLabel": [{ type: Input },],
        "onRevert": [{ type: Output },],
        "onSubmit": [{ type: Output },],
        "color": [{ type: Input },],
    };
    return MatTimepickerComponent;
}());
export { MatTimepickerComponent };
//# sourceMappingURL=mat-timepicker.component.js.map
{"version":3,"file":"mat-timepicker-toggle.component.js","sourceRoot":"","sources":["../../../../src/time-control/mat-timepicker-toggle/mat-timepicker-toggle.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n\nimport {WTimeDialogComponent} from '../w-time-dialog/w-time-dialog.component';\nimport {ITime} from '../w-clock/w-clock.component';\nimport {WTimeComponent} from \"../w-time/w-time.component\";\n\n\n@Component({\n  selector: 'mat-timepicker-toggle',\n  styles: [`\n    .time-picker-button {\n      padding: 0;\n      margin: 0;\n      min-width: 44px;\n    }\n  `],\n  template: `\n    <div fxFlex fxLayout=\"row\" class=\"w-mat-timepicker\">\n      <button mat-button (click)=\"showPicker($event)\" class=\"time-picker-button\">\n        <mat-icon>access_time</mat-icon>\n      </button>\n    </div>\n  `\n})\n\nexport class MatTimepickerToggleComponent implements OnInit {\n\n  @Input() userTime: ITime;\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() color: string;\n\n  @Input('for') timepicker: WTimeComponent;\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n\n    if (!this.userTime) {\n\n      this.userTime = {\n\n        hour: 10,\n        minute: 25,\n        meriden: 'PM',\n        format: 24\n      }\n    }\n  }\n\n  get time(): string {\n\n    if (!this.userTime) {\n      return '';\n    }\n\n    let meriden = `${this.userTime.meriden}`;\n    if (this.userTime.format === 24) {\n      meriden = '';\n    }\n\n    let hour = `${this.userTime.hour}`;\n    if (this.userTime.hour === 24) {\n      hour = '00';\n    }\n\n    if (this.userTime.minute === 0) {\n      return `${hour}:00 ${meriden}`;\n\n    } else if (this.userTime.minute < 10) {\n\n      const tt = '0' + String(this.userTime.minute);\n      return `${hour}:${tt} ${meriden}`;\n\n    } else {\n      return `${hour}:${this.userTime.minute} ${meriden}`;\n    }\n  }\n\n\n  public showPicker($event) {\n\n    const dialogRef = this.dialog.open(WTimeDialogComponent, {\n\n      data: {\n        time: {\n          hour: this.timepicker.userTime ? this.timepicker.userTime.hour : 6,\n          minute: this.timepicker.userTime ? this.timepicker.userTime.minute : 0,\n          meriden: this.timepicker.userTime ? this.timepicker.userTime.meriden : 'PM',\n          format: this.timepicker.userTime ? this.timepicker.userTime.format : 12\n        },\n        color: this.timepicker.color\n      }\n    });\n\n    dialogRef.afterClosed()\n      .subscribe((result: ITime | -1) => {\n\n        // result will be update userTime object or -1 or undefined (closed dialog w/o clicking cancel)\n        if (result === undefined) {\n          return;\n        } else if (result !== -1) {\n          this.timepicker.userTime = result;\n          this.emituserTimeChange();\n        }\n      });\n    return false;\n  }\n\n  private emituserTimeChange() {\n\n    this.userTimeChange.emit(this.userTime);\n  }\n}\n"]}
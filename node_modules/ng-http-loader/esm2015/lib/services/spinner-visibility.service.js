import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { PendingInterceptorService } from './pending-interceptor.service';
import * as i0 from "@angular/core";
import * as i1 from "./pending-interceptor.service";
export class SpinnerVisibilityService {
    constructor(pendingInterceptorService) {
        this.pendingInterceptorService = pendingInterceptorService;
        this._visibilitySubject = new ReplaySubject(1);
    }
    get visibilityObservable() {
        return this._visibilitySubject.asObservable();
    }
    show() {
        this.pendingInterceptorService.forceByPass = true;
        this._visibilitySubject.next(true);
    }
    hide() {
        this._visibilitySubject.next(false);
        this.pendingInterceptorService.forceByPass = false;
    }
}
SpinnerVisibilityService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
SpinnerVisibilityService.ctorParameters = () => [
    { type: PendingInterceptorService, },
];
/** @nocollapse */ SpinnerVisibilityService.ngInjectableDef = i0.defineInjectable({ factory: function SpinnerVisibilityService_Factory() { return new SpinnerVisibilityService(i0.inject(i1.PendingInterceptorService)); }, token: SpinnerVisibilityService, providedIn: "root" });
function SpinnerVisibilityService_tsickle_Closure_declarations() {
    SpinnerVisibilityService.decorators;
    SpinnerVisibilityService.ctorParameters;
    SpinnerVisibilityService.prototype._visibilitySubject;
    SpinnerVisibilityService.prototype.pendingInterceptorService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci12aXNpYmlsaXR5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1odHRwLWxvYWRlci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9zcGlubmVyLXZpc2liaWxpdHkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBYyxhQUFhLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDakQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7OztBQUsxRSxNQUFNO0lBR0YsWUFBb0IseUJBQW9EO1FBQXBELDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBMkI7a0NBRm5CLElBQUksYUFBYSxDQUFVLENBQUMsQ0FBQztLQUdqRjtJQUVELElBQUksb0JBQW9CO1FBQ3BCLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7S0FDakQ7SUFFTSxJQUFJO1FBQ1AsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFDbEQsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7SUFHaEMsSUFBSTtRQUNQLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7Ozs7WUFwQjFELFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQjs7O1lBSlEseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTXG4gKiBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1JcbiAqIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUlxuICogSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU5cbiAqIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUGVuZGluZ0ludGVyY2VwdG9yU2VydmljZSB9IGZyb20gJy4vcGVuZGluZy1pbnRlcmNlcHRvci5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBTcGlubmVyVmlzaWJpbGl0eVNlcnZpY2Uge1xuICAgIHByaXZhdGUgX3Zpc2liaWxpdHlTdWJqZWN0OiBSZXBsYXlTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IFJlcGxheVN1YmplY3Q8Ym9vbGVhbj4oMSk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBlbmRpbmdJbnRlcmNlcHRvclNlcnZpY2U6IFBlbmRpbmdJbnRlcmNlcHRvclNlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBnZXQgdmlzaWJpbGl0eU9ic2VydmFibGUoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgICAgIHJldHVybiB0aGlzLl92aXNpYmlsaXR5U3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wZW5kaW5nSW50ZXJjZXB0b3JTZXJ2aWNlLmZvcmNlQnlQYXNzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fdmlzaWJpbGl0eVN1YmplY3QubmV4dCh0cnVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fdmlzaWJpbGl0eVN1YmplY3QubmV4dChmYWxzZSk7XG4gICAgICAgIHRoaXMucGVuZGluZ0ludGVyY2VwdG9yU2VydmljZS5mb3JjZUJ5UGFzcyA9IGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==